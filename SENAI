CREATE DATABASE reserva_salas_laboratorios;
USE reserva_salas_laboratorios;

-- Tabela de Instituições
CREATE TABLE instituicao (
    id_instituicao INT AUTO_INCREMENT PRIMARY KEY,
    nome_da_instituicao VARCHAR(60) NOT NULL,
    unidade_da_instituicao VARCHAR(35) NOT NULL,
    cidade_da_instituicao VARCHAR(35) NOT NULL,
    coordenador_da_instituicao VARCHAR(90) NOT NULL,
    UNIQUE (nome_da_instituicao, unidade_da_instituicao)
);

-- Tabela de Salas e Laboratórios
CREATE TABLE sala (
    id_sala INT AUTO_INCREMENT PRIMARY KEY,
    bloco_da_sala VARCHAR(30) NOT NULL,
    andar_da_sala INT NOT NULL,
    tipo_da_sala ENUM('Sala de Aula', 'Laboratório') NOT NULL,
    numero_da_sala INT NOT NULL,
    numero_de_maquinas INT DEFAULT 0,  -- Somente para Laboratórios
    numero_de_mesas INT NOT NULL,
    numero_de_cadeiras INT NOT NULL,
    possui_projetor BOOLEAN NOT NULL DEFAULT FALSE,
    possui_computador BOOLEAN NOT NULL DEFAULT FALSE,
    instituicao_id INT NOT NULL,
    FOREIGN KEY (instituicao_id) REFERENCES instituicao(id_instituicao)
);

-- Tabela de Cursos Técnicos
CREATE TABLE curso_tecnico (
    id_curso INT AUTO_INCREMENT PRIMARY KEY,
    nome_do_curso VARCHAR(70) NOT NULL,
    tempo_de_curso INT NOT NULL,  -- Tempo do curso em horas ou outra unidade apropriada
    coordenador_do_curso INT NOT NULL,  -- Referência ao coordenador do curso
    FOREIGN KEY (coordenador_do_curso) REFERENCES coordenador(id_coordenador)
);

-- Tabela de Disciplinas
CREATE TABLE disciplina (
    id_disciplina INT AUTO_INCREMENT PRIMARY KEY,
    nome_da_disciplina VARCHAR(80) NOT NULL,
    tempo_da_disciplina INT  -- Tempo da disciplina em horas ou outra unidade apropriada
);

-- Tabela de Semestres
CREATE TABLE semestre (
    id_semestre INT AUTO_INCREMENT PRIMARY KEY,
    ano INT NOT NULL,
    semestre ENUM('Primeiro', 'Segundo') NOT NULL
);

-- Tabela de Alunos
CREATE TABLE aluno (
    id_aluno INT AUTO_INCREMENT PRIMARY KEY,
    nome_aluno VARCHAR(50) NOT NULL,
    cpf_aluno VARCHAR(14) NOT NULL UNIQUE,  -- CPF como VARCHAR para preservar zeros à esquerda
    email_aluno VARCHAR(50) NOT NULL UNIQUE,
    telefone VARCHAR(15) NOT NULL,
    endereco_aluno VARCHAR(255) NOT NULL,
    data_nascimento DATE NOT NULL,
    matricula VARCHAR(20) NOT NULL UNIQUE,
    curso_id INT NOT NULL,  -- Referência ao curso que o aluno está matriculado
    semestre_id INT NOT NULL,  -- Referência ao semestre atual do aluno
    FOREIGN KEY (curso_id) REFERENCES curso_tecnico(id_curso),
    FOREIGN KEY (semestre_id) REFERENCES semestre(id_semestre)
);

-- Tabela de Frequência
CREATE TABLE frequencia (
    id_frequencia INT AUTO_INCREMENT PRIMARY KEY,
    aluno_id INT NOT NULL,
    reserva_id INT NOT NULL,
    data_frequencia DATE NOT NULL,
    status ENUM('Presente', 'Ausente') NOT NULL,
    FOREIGN KEY (aluno_id) REFERENCES aluno(id_aluno),
    FOREIGN KEY (reserva_id) REFERENCES reserva(id_reserva)
);

-- Tabela de Reservas
CREATE TABLE reserva (
    id_reserva INT AUTO_INCREMENT PRIMARY KEY,
    sala_id INT NOT NULL,
    curso_id INT NOT NULL,
    disciplina_id INT NOT NULL,
    professor_id INT NOT NULL,  -- Referência ao professor responsável pela aula
    periodo ENUM('Manhã', 'Tarde', 'Noite') NOT NULL,
    data_da_reserva DATETIME NOT NULL,
    FOREIGN KEY (sala_id) REFERENCES sala(id_sala),
    FOREIGN KEY (curso_id) REFERENCES curso_tecnico(id_curso),
    FOREIGN KEY (disciplina_id) REFERENCES disciplina(id_disciplina),
    FOREIGN KEY (professor_id) REFERENCES professor(id_professor)
);

-- Tabela de Manutenção
CREATE TABLE manutencao (
    id_manutencao INT AUTO_INCREMENT PRIMARY KEY,
    sala_id INT NOT NULL,
    problema_descrito TEXT NOT NULL,
    data_do_problema DATETIME NOT NULL,
    resolvido BOOLEAN NOT NULL DEFAULT FALSE,
    data_resolucao DATETIME,  -- Data em que o problema foi resolvido, se aplicável
    FOREIGN KEY (sala_id) REFERENCES sala(id_sala)
);

-- Tabela de Coordenadores
CREATE TABLE coordenador (
    id_coordenador INT AUTO_INCREMENT PRIMARY KEY,
    nome_coordenador VARCHAR(50) NOT NULL,
    email_coordenador VARCHAR(50) NOT NULL UNIQUE
);

-- Tabela de Professores
CREATE TABLE professor (
    id_professor INT AUTO_INCREMENT PRIMARY KEY,
    nome_professor VARCHAR(50) NOT NULL,
    email_professor VARCHAR(50) NOT NULL UNIQUE,
    telefone_professor VARCHAR(15),
    departamento VARCHAR(50)
);

-- Tabela de Disciplinas que o Professor Leciona
CREATE TABLE professor_disciplina (
    professor_id INT NOT NULL,
    disciplina_id INT NOT NULL,
    PRIMARY KEY (professor_id, disciplina_id),
    FOREIGN KEY (professor_id) REFERENCES professor(id_professor),
    FOREIGN KEY (disciplina_id) REFERENCES disciplina(id_disciplina)
);

-- Tabela de Turmas
CREATE TABLE turma (
    id_turma INT AUTO_INCREMENT PRIMARY KEY,
    disciplina_id INT NOT NULL,
    sala_id INT NOT NULL,
    horario TIME NOT NULL,
    semestre_id INT NOT NULL,
    FOREIGN KEY (disciplina_id) REFERENCES disciplina(id_disciplina),
    FOREIGN KEY (sala_id) REFERENCES sala(id_sala),
    FOREIGN KEY (semestre_id) REFERENCES semestre(id_semestre)
);
